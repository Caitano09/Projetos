unit uPesquisaJuros;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes,
  Vcl.Graphics,  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls,
  Vcl.Mask, RxToolEdit, RxLookup, Vcl.ComCtrls, System.ImageList, Vcl.ImgList,
  PngImageList, Vcl.ToolWin, RxCurrEdit, Data.DB, Vcl.Grids, Vcl.DBGrids,
  JurosRN, TipoJuros, Juros, ZAbstractConnection, ZConnection, ZDataset,
  ZAbstractRODataset, ZAbstractDataset, RDprint, Vcl.Menus, Validar;

type
  TfrmPesquisaJuros = class(TForm)
    ToolBar1: TToolBar;
    PngImageList1: TPngImageList;
    btnVoltar: TToolButton;
    btnVisualizar: TToolButton;
    btnPesquisar: TToolButton;
    btnImprimir: TToolButton;
    GroupBox1: TGroupBox;
    Panel1: TPanel;
    edtDe: TCurrencyEdit;
    edtAte: TCurrencyEdit;
    lblDe: TLabel;
    lblAte: TLabel;
    DBGrid1: TDBGrid;
    Panel2: TPanel;
    lblRegistros: TLabel;
    Bevel1: TBevel;
    lblNumRegistros: TLabel;
    dblTipoJuros: TRxDBLookupCombo;
    dsPesquisa: TDataSource;
    zqGet: TZQuery;
    lblSelecionado: TLabel;
    ppmImprimir: TPopupMenu;
    ipodeProdutos1: TMenuItem;
    ListagemdeProduto1: TMenuItem;
    RDprint: TRDprint;
    RDprintExemplo: TRDprint;
    procedure btnVoltarClick(Sender: TObject);
    procedure btnPesquisarClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure btnVisualizarClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure DBGrid1DrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);
    procedure RDprintAfterPrint(Sender: TObject);
    procedure RDprintBeforeNewPage(Sender: TObject; Pagina: Integer);
    procedure RDprintNewPage(Sender: TObject; Pagina: Integer);
    procedure ipodeProdutos1Click(Sender: TObject);

  private
    { Private declarations }
    bVisualizar: boolean;
    iLinha, iLinhaContinua: integer;
    procedure AfterScroll(DataSet: TDataSet);
    procedure imprimir();
    procedure newLinePage();
  public
    { Public declarations }
      function getVisualizar(): boolean;
      procedure setVisualizar(visualizar: boolean);
  end;

var
  frmPesquisaJuros: TfrmPesquisaJuros;
  JurosRn : TJurosRN;
  Juros : TJuros;
  TipoJuros : TTipoJuros;
  ValidarPesquisa: TValidar;

implementation

{$R *.dfm}

uses uDMPrincipal;

procedure TfrmPesquisaJuros.AfterScroll(DataSet: TDataSet);
begin
  lblSelecionado.Caption := '';
  if not zqGet.IsEmpty then
     lblSelecionado.Caption :=
     'Cod: '+zqGet.FieldByName('codigo').AsString+' | '+
     'Juros: '+zqGet.FieldByName('juros').AsString+' | '+
     'Mora: '+zqGet.FieldByName('jurosmora').AsString+' | '+
     'Acres: '+zqGet.FieldByName('acrescimo').AsString+' | '+
     'Atraso: '+zqGet.FieldByName('diaatraso').AsString;
end;

procedure TfrmPesquisaJuros.setVisualizar(visualizar: boolean);
begin
  bVisualizar := visualizar;
end;

function TfrmPesquisaJuros.getVisualizar: boolean;
begin
  result := bVisualizar;
end;

procedure TfrmPesquisaJuros.imprimir;
var
  sSQL: string;
  iCount: integer;
begin
  sSQL := '';

  if zqGet.RecordCount > 0 then
  begin
    RDprint.OpcoesPreview.Preview := true;
    RDprint.MostrarProgresso      := true;

    RDprint.abrir;

    iLinha := 7;
    iCount := 0;

    zqGet.First;
    while not zqGet.eof do
    begin
      newLinePage;

      RDprint.Impc(iLinha, 01,
      ValidarPesquisa.PreencherString(zqGet.FieldByName('codigo').AsInteger, ' ', 1, 'D')+
      ValidarPesquisa.PreencherString(FormatFloat('###,###,##0.000%', zqGet.FieldByName('juros').AsFloat),' ',25, 'E')+
      ValidarPesquisa.PreencherString(FormatFloat('###,###,##0.000%', zqGet.FieldByName('jurosmora').AsFloat), ' ', 23, 'E')+
      ValidarPesquisa.PreencherString(FormatFloat('###,###,##0.000R$', zqGet.FieldByName('acrescimo').AsFloat), ' ', 33, 'E')+
      ValidarPesquisa.PreencherString(zqGet.FieldByName('diaatraso').AsString, ' ', 27, 'E')+
      ValidarPesquisa.PreencherString(zqGet.FieldByName('tipojuros').AsString, ' ', 38, 'E'), [comp20], 0);

      inc(iCount);

      zqGet.next;
    end;

    newLinePage;
    RDprint.imp(iLinha,01,'--------------------------------------------------------------------------------',0);
    newLinePage;
    RDprint.Impc(iLinha,01,
    ValidarPesquisa.PreencherString('REGISTRO('+IntToStr(iCount)+')', ' ', 23, 'D'), [comp20, negrito], 0);
    newLinePage;
    RDprint.imp(iLinha,01,'--------------------------------------------------------------------------------',0);

    RDprint.fechar;
  end;
end;

procedure TfrmPesquisaJuros.ipodeProdutos1Click(Sender: TObject);
begin
  imprimir;
end;

procedure TfrmPesquisaJuros.newLinePage;
begin
  Inc(iLinha);
  if iLinha > 63 then
     RDprint.NovaPagina;
end;


procedure TfrmPesquisaJuros.RDprintAfterPrint(Sender: TObject);
begin
  Keybd_Event(VK_Escape, 0, 0, 0);
end;

procedure TfrmPesquisaJuros.RDprintBeforeNewPage(Sender: TObject;
  Pagina: Integer);
begin
  RDprint.imp (64,01,'--------------------------------------------------------------------------------');
  RDprint.impf(65,01,'G10 Sistemas ', [NEGRITO]);
  RDprint.impf(65,65,'Telefone (75) 3631-4327', [comp17]);
end;


procedure TfrmPesquisaJuros.RDprintNewPage(Sender: TObject; Pagina: Integer);
begin
  RDprint.imp (01,01,'--------------------------------------------------------------------------------',0);
  RDprint.impc(02,01,'RELAÇÃO DE TIPOS DE PRODUTOS', [NEGRITO],  0);
  RDprint.impf(02,64,'Data:'+DateToStr(Date())+'',[normal], 0);
  RDprint.impf(03,01,'Página: ' + formatfloat('##',pagina) + ' de &page&',[normal], 0);
  RDprint.imp(04,01,'--------------------------------------------------------------------------------',0);
  RDprint.impc(05, 01,
  ValidarPesquisa.PreencherString('CÓDIGO    ', ' ', 20, 'D')+
  ValidarPesquisa.PreencherString('JUROS     ', ' ', 25, 'D')+
  ValidarPesquisa.PreencherString('MORA      ', ' ', 30, 'D')+
  ValidarPesquisa.PreencherString('ACRESCIMO ', ' ', 28, 'D')+
  ValidarPesquisa.PreencherString('DIA ATRASO', ' ', 30, 'D')+
  ValidarPesquisa.PreencherString('TIPOJUROS', ' ', 70, 'D'), [comp20], 0);
  RDprint.imp(06,01,'--------------------------------------------------------------------------------', 0);

  iLinha         := 7;
  iLinhaContinua := 7;
end;

procedure TfrmPesquisaJuros.btnPesquisarClick(Sender: TObject);
begin
  tipoJuros.setDescricao(dblTipoJuros.text);
  tipoJuros.setCodigo(StrToInt(dblTipoJuros.Value));
  JurosRn.botaoPesquisarPesquisa(lblNumRegistros, zqGet, edtDe.Value, edtAte.value, TipoJuros);
end;

procedure TfrmPesquisaJuros.btnVisualizarClick(Sender: TObject);
begin
  JurosRn.botaoVisualizar(zqGet);
  bVisualizar := true;
end;

procedure TfrmPesquisaJuros.btnVoltarClick(Sender: TObject);
begin
  JurosRn.botaoVoltarPesquisa;
end;

procedure TfrmPesquisaJuros.DBGrid1DrawColumnCell(Sender: TObject;
  const Rect: TRect; DataCol: Integer; Column: TColumn; State: TGridDrawState);
var
  sTexto: string;
begin
  with (Sender as TDBGrid).Canvas do
  begin
    sTexto := DBGrid1.DataSource.DataSet.FieldByName(Column.Field.FieldName).AsString;

    {Zébra o GRID}
    if State = [] then
    begin
      if DBGrid1.DataSource.DataSet.RecNo mod 2 = 1 then
         DBGrid1.Canvas.Brush.Color := $00FFE2C6
      else
         DBGrid1.Canvas.Brush.Color := clWhite;
    end;
    DBGrid1.DefaultDrawColumnCell(Rect, DataCol, Column, State);

    Font.Color := clBlack;

    if (gdSelected in State) or (gdFocused in State) then
       TDBGrid(Sender).Canvas.Brush.Color := $0082FFFF;

    DBGrid1.DefaultDrawColumnCell(Rect, DataCol, Column, State);

    FillRect(Rect);
    if not (State=[]) then
       DrawFocusRect(Rect);

     if (Column.Field.FieldName = 'codigo') or
        (Column.Field.FieldName = 'juros') or
        (Column.Field.FieldName = 'jurosmora') or
        (Column.Field.FieldName = 'acrescimo') or
        (Column.Field.FieldName = 'codtipojuros') or
         (Column.Field.FieldName = 'diaatraso')
      then
        TextOut(Rect.Right - (TextWidth(sTexto)+4), Rect.Top+1, sTexto)
     else
        TextOut(Rect.Left+2, Rect.Top+1, sTexto);
  end;
end;

procedure TfrmPesquisaJuros.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
  try
    JurosRn.Free;
    Juros.Free;
    TipoJuros.Free;
    ValidarPesquisa.Free;
  finally
    Action := caFree;
    //o frm recebe nulo no botão pesquisaCadastro
  end;
end;

procedure TfrmPesquisaJuros.FormCreate(Sender: TObject);
begin
  jurosRn := TJurosRN.Create;
  juros := TJuros.Create;
  tipoJuros := TTipoJuros.Create;
  ValidarPesquisa := TValidar.Create;

  JurosRn.getJuros(lblNumRegistros, zqGet);

  dblTipoJuros.LookupSource := JurosRn.getTipoJuros;
  dblTipoJuros.LookupDisplay := 'descricao';
  dblTipoJuros.LookupField := 'id';

  DBGrid1.Columns[0].Width := 45;
  DBGrid1.Columns[1].Width := 50;
  DBGrid1.Columns[2].Width := 65;
  DBGrid1.Columns[3].Width := 65;
  DBGrid1.Columns[4].Width := 65;
  DBGrid1.Columns[5].Width := 80;
  DBGrid1.Columns[6].Width := 180;

  zqGet.AfterScroll := AfterScroll;
end;

procedure TfrmPesquisaJuros.FormShow(Sender: TObject);
begin
  lblSelecionado.Caption := '';
end;

end.
