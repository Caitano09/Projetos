unit Juros;

interface

type
  TJuros = class

    private
      codigo: integer;
      juros: double;
      mora: double;
      acrescimo: double;
      diaAtraso: integer;
      tipoJuros: string;

    public
      constructor Create(cod, dia: integer; juro, mor: double; tJuro: String);
      destructor Destroy(); override;
      function getCodigo(): Integer;
      function getJuros(): double;
      function getMora(): double;
      function getAcrescimo(): double;
      function getDiaAtraso(): Integer;
      function getTipoJuros(): Integer;

      procedure setCodigo(cod: Integer);
      procedure setJuros(juro: double);
      procedure setMora(mor: double);
      procedure setAcrescimo(acres: double);
      procedure setDiaAtraso(dia: integer);
      procedure setTipoJuros(tjuro: string);

  end;

implementation




{ TJuros }

constructor TJuros.Create(cod, dia: integer; juro, mor: double; tJuro: String);
begin
      codigo := cod;
      juros := juro;
      mora := mor;
      acrescimo := juro;
      diaAtraso := dia;
      tipoJuros := tJuro;
end;

destructor TJuros.Destroy;
begin
  inherited;
end;

function TJuros.getAcrescimo: double;
begin
  result := acrescimo
end;

function TJuros.getCodigo: Integer;
begin
  result := codigo;
end;

function TJuros.getDiaAtraso: Integer;
begin
  result := diaAtraso;
end;

function TJuros.getJuros: double;
begin
  result := juros;
end;

function TJuros.getMora: double;
begin
  result := mora;
end;

function TJuros.getTipoJuros: Integer;
begin
  result := tipoJuros;
end;

procedure TJuros.setAcrescimo(acres: double);
begin
  acrescimo := acres;
end;

procedure TJuros.setCodigo(cod: Integer);
begin
  codigo := cod;
end;

procedure TJuros.setDiaAtraso(dia: integer);
begin
  diaAtraso := dia;
end;

procedure TJuros.setJuros(juro: double);
begin
  juros := juro;
end;

procedure TJuros.setMora(mor: double);
begin
  mora := mor;
end;

procedure TJuros.setTipoJuros(tJuro: string);
begin
  tipoJuros := tJuro;
end;

end.
