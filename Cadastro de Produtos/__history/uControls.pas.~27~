unit uControls;

interface
uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Data.DB, Vcl.Grids, Vcl.DBGrids;
type
  Tcontrols = class (Tform)
      private

      public
    { Public declarations }

     class function GetId(): Integer;
     class function GetVoltarOuVisualizar(): Boolean;
     class procedure SetGravarOuAlterar(opcao: Boolean);
     class procedure SetVoltarOuVisualizar(opcao: Boolean);


    class procedure CriacaoForm();
    class procedure BotaoGravar (codigo, descricao: string);
    class procedure BotaoVoltar1();
    class procedure BotaoVoltar2();
    class procedure BotaoPesquisar1();
    class procedure BotaoPesquisar2(codigo, descricao: String);
    class procedure BotaoVisualizar();
    class procedure BotaoPrint();
    class procedure BotaoImprimir();
    class procedure BotaoExcluir();
    class procedure TeclasAtalhos(key: word);
    class procedure TeclasAtalhos2(key: word);
    class procedure ZebrarDBGrid(Sender: TObject; const Rect: TRect; DataCol: Integer; Column: TColumn; State: TGridDrawState);
  end;

  var
  bGravar: Boolean;
  iId: Integer;
  bVisualizar: boolean;
  bExiste : boolean;

implementation

uses  uCadastro, uPesquisa, uRelatorio, Dados, uDm, uBuscar;

// Seta o valor (Novo/ALterar)
class procedure Tcontrols.SetGravarOuAlterar(opcao: Boolean);
begin
  bGravar := opcao;
end;


// Seta o valor (Voltar/Visualizar)
class procedure Tcontrols.SetVoltarOuVisualizar(opcao: Boolean);
begin
  bVisualizar := opcao;
end;


// Devolve o valor (Voltar/Visualizar)
class function Tcontrols.GetVoltarOuVisualizar;
begin
  result := bVisualizar;
end;


// Devolve o valor do ID
class function Tcontrols.GetId(): Integer;
begin
  Result := iId;
end;


//Botão Voltar (Formulário de Cadastro)
class procedure Tcontrols.BotaoVoltar1;
begin
 frmCadastro.Close;
end;

// Botão Voltar (Formulário de Pesquisa/Buscar)
class procedure Tcontrols.BotaoVoltar2;
begin
 frmPesquisa.Close;
 //frmBuscar.Close;
end;

// Botão Gravar
class procedure Tcontrols.BotaoGravar(codigo: string; descricao: string);
begin

  Tcontrols.BotaoPesquisar2(codigo, '');
  bExiste := DataModule1.ZQuery1.IsEmpty;
  Tcontrols.BotaoPesquisar2('', descricao);
  //Verifica se os campos estão vazios
  if trim (descricao) = '' then
  begin
    ShowMessage('A caixa de texto descrição está vazia');
  end

  else if trim (codigo) = '' then
  begin
    ShowMessage('A caixa de texto código está vazia');
  end

  else if (not DataModule1.ZQuery1.IsEmpty) then
  begin
    ShowMessage('Descricão já existe');
  end

  else if (not bExiste) then
  begin
    ShowMessage('Codigo já existe');
  end

  //Testa o valor Booleano
  else if not bGravar then
  begin
    Tdados.sqlInsert(codigo, descricao);
    ShowMessage('Adicionado com sucesso');
  end

  else if bGravar then
  begin
    if Application.MessageBox('Deseja Alterar?', 'Stop', mb_yesno + mb_iconquestion) = id_yes then
     begin
        Tdados.sqlUpdate(iId ,codigo,descricao);
        ShowMessage('Alterado com sucesso');
     end;
  end;
end;

//Botão Excluir
class procedure Tcontrols.BotaoExcluir;
begin
  Tdados.VerificaExclusão(iId);
  if (not DataModule1.ZQuery1.IsEmpty) then
  begin
    ShowMessage('Item está sendo usado na tabela produto');
  end

  else if Application.MessageBox('Deseja excluir?', 'Stop', mb_yesno + mb_iconquestion) = id_yes then
  begin
    Tdados.sqlDelete(iId);
   ShowMessage('Item excluído');
  end;

end;


//Botão Pesquisar (Formulário de Cadastro)
class procedure Tcontrols.BotaoPesquisar1;
begin
  Tdados.SelectTudo;
  //frmBuscar := TfrmBuscar.Create(frmBuscar);
  //frmBuscar.ShowModal;
  frmPesquisa := TfrmPesquisa.Create(frmPesquisa);
  frmPesquisa.ShowModal;
end;


//Criação do Form Pesquisa
class procedure Tcontrols.CriacaoForm;
var
    iLinha: integer;

begin

   Tdados.SelectTudo();
  {with uBuscar.frmBuscar.StringGrid1 do begin
    ColCount := DataModule1.ZQuery1.FieldCount;
    RowCount := DataModule1.ZQuery1.RecordCount + 1;

    ColWidths[0] := 40;
    ColWidths[1] := 100;
    ColWidths[2] := 100;

    cells[0, 0] := DataModule1.ZQuery1.Fields[0].FieldName;
    cells[1, 0] := DataModule1.ZQuery1.Fields[1].FieldName;
    cells[2, 0] := DataModule1.ZQuery1.Fields[2].FieldName;

    DataModule1.ZQuery1.First;

    for iLinha := 0 to RowCount do

      begin

        cells[0,  iLinha+1] := DataModule1.ZQuery1.FieldByName('id').AsString;
        cells[1,  iLinha+1] := DataModule1.ZQuery1.FieldByName('codigo').AsString;
        cells[2,  iLinha+1] := DataModule1.ZQuery1.FieldByName('descricao').AsString;
        DataModule1.ZQuery1.Next;//Proximo Registro
      end;

  end;  }

end;

//Botão Pesquisar (Formulário de Pesquisa/Buscar)
class procedure Tcontrols.BotaoPesquisar2(codigo: string; descricao: string);
begin
  if (Trim(Descricao) <> '') and (Trim(Codigo) <> '') then
 begin
        Tdados.sqlSelect(1, descricao, codigo);
 end

  else if (Trim(Descricao) = '') and (Trim(Codigo) <> '') then
  begin
        Tdados.sqlSelect(2, descricao, codigo);
  end

  else if (Trim(Descricao) <> '') and (Trim(Codigo) = '') then
  begin
        Tdados.sqlSelect(3, descricao, codigo);
  end

  else
  begin
    ShowMessage('Campos vazios');
    Tdados.SelectTudo;
  end;

end;

//Botão Visualizar
class procedure Tcontrols.BotaoVisualizar;
begin
  iId := DataModule1.ZQuery1.FieldByName('id').AsInteger;
  frmCadastro.edtCodigo.Text := DataModule1.ZQuery1.FieldByName('codigo').AsString;
  frmCadastro.edtdescricao.Text := DataModule1.ZQuery1.FieldByName('descricao').AsString;
  Tcontrols.BotaoVoltar2;
end;

//Botão Print (RDPrint)
class procedure Tcontrols.BotaoPrint;
  var i, id: Integer;

  begin
    DataModule1.RDprint1.Abrir; //Abertura
    if DataModule1.RDprint1.Setup = true then //Verificando Setup

    begin                    //Linha  Coluna  Texto
      DataModule1.RDprint1.Imp(1,     1,      'TIPOPRODUTO');
      DataModule1.RDprint1.Imp(3, 1, '-------------------------------------------------');
      DataModule1.RDprint1.Imp(4, 01, 'ID');
      DataModule1.RDprint1.Imp(4, 15, 'CODIGO');
      DataModule1.RDprint1.Imp(4, 30, 'DESCRICÃO');
      DataModule1.RDprint1.Imp(5, 1, '-------------------------------------------------');
      DataModule1.ZQuery1.First; //Primeiro Registro
      i := 6;

      repeat
      begin
        DataModule1.RDprint1.Imp(i, 01, DataModule1.ZQuery1.FieldByName('id').AsString);
        DataModule1.RDprint1.Imp(i, 15, DataModule1.ZQuery1.FieldByName('codigo').AsString);
        DataModule1.RDprint1.Imp(i, 30, DataModule1.ZQuery1.FieldByName('descricao').AsString);
        id := DataModule1.ZQuery1.FieldByName('id').AsInteger;
        DataModule1.ZQuery1.Next;//Proximo Registro
        i := i +1;
      end;
      until (id = DataModule1.ZQuery1.FieldByName('id').AsInteger); //Condição de Saída
      DataModule1.RDprint1.Imp(66, 60, FormatDateTime('dd/mm/yyyy HH: MM: SS', NOW));
      DataModule1.RDprint1.Fechar;//Fechamento
  end;
end;

//Botão Imprimir (Fortes Report)
class procedure Tcontrols.BotaoImprimir;
begin
  frmRelatorio:= TfrmRelatorio.Create(frmRelatorio);
  frmRelatorio.RLReport1.Preview;
end;

 //Teclas de atalho (form Cadastro)
class procedure Tcontrols.TeclasAtalhos(key: Word);
begin
  with frmCadastro do
  begin
    case key of
    VK_ESCAPE: if (btnVoltar.Enabled = true) then btnVoltar.Click;
    VK_F10: if (btnNovo.Enabled = true) then  btnNovo.Click;
    VK_F4: if (btnAlterar.Enabled = true) then btnAlterar.Click;
    VK_F6: if (btnExcluir.Enabled = true) then btnExcluir.Click;
    VK_F3: if (btnGravar.Enabled = true) then btnGravar.Click;
    VK_F2: if (btnCancelar.Enabled = true) then btnCancelar.Click;
    VK_F5: if (btnPesquisar.Enabled = true) then btnPesquisar.Click;
  end;

  end;
end;

 //Teclas de atalho (form Pesquisa/Buscar)
class procedure Tcontrols.TeclasAtalhos2(key: Word);
begin
  with frmBuscar do
  begin
    case key of
      VK_ESCAPE: btnVoltar.Click;
      VK_F7: btnImprimir.Click;
      VK_F5: btnPesquisar.Click;
    end;
  end;
end;

//Zebrando DbGrid
class procedure Tcontrols.ZebrarDBGrid(Sender: TObject; const Rect: TRect;
  DataCol: Integer; Column: TColumn; State: TGridDrawState);
begin
 with frmPesquisa do
 begin
     if not (gdSelected in State) then
  begin
    if Odd((Sender as TDBGrid).DataSource.DataSet.RecNo) then
      (Sender as TDBGrid).Canvas.Brush.Color:= clWhite
    else
      (Sender as TDBGrid).Canvas.Brush.Color:= clSkyBlue; // leve cinza

    // Aplicando prto para a cor da fonte
    (Sender as TDBGrid).Canvas.Font.Color:= clBlack;

    (Sender as TDBGrid).Canvas.FillRect(Rect);
    (Sender as TDBGrid).Canvas.TextOut(Rect.Left + 2, Rect.Top,
    Column.Field.DisplayText);
  end;
 end;
end;

end.
